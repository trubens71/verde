---
  trial_id: trial_01
  trial_desc: trivial data set for dev and unit testing
  global_config:  # global settings take precedence over experiments if duplicated there
    verde_meta_schema: ../schemas/verde_meta_schema.json
    domain_schema: ../schemas/verde_asc_domain_schema.json
    domain_mapping_schema: ../schemas/verde_asc_domain_mapping_schema.json
    draco_base_lp_dir: ../asp/draco_base
    verde_base_lp_override_dir: ../asp/verde_override  # must contain same file names as draco base in order to override
    num_models: 20  # how many ranked visualisation models to solve for (topk in Draco)
    execute:
      validate_domain_schema:
        do: true
      validate_input_file_mapping:
        do: true
      fix_input_file_column_names:
        do: true
      create_baseline_schema_query_lp:
        do: true
        write_lp: true
      create_verde_rules_lp:
        do: true  # overall switch, followed by rule-specific switches
        write_lp: true
        rule_01v01_causal_relationships:
          do: false
          export_graphml: true
        rule_01v02_causal_relationships:
          do: true
          export_graphml: true
        rule_02_ordinal_sort:
          do: false
        rule_03_data_precision:
          do: false
        rule_04_eliminate_codes:
          do: false
        rule_05_entity_colours:
          do: false
        rule_06_summary_by_grouping:
          do: false
      get_baseline_visualisations:
        do: true
        write_lp: true
      get_verde_visualisations:
        do: true
        write_lp: true
      make_vegalite_concat:
        do: true
      compare_baseline_verde:
        do: true
  experiments:
    - experiment_id: exp_01
      do: false
      experiment_desc: basic test of quality of life versus expenditure
      input_data_file: ../asc_data/processed/set_00/AFR_T1_ASCOF_1A.csv
      input_mapping_file: ../asc_data/processed/set_00/AFR_T1_ASCOF_1A_mapping.json
      query:  # in dziban python query format, supports unfixed input file column names.
        - field('Social care-related quality of life score (All)')
        - field('Gross Total Expenditure (x1000)')
    - experiment_id: exp_02
      do: true
      experiment_desc: four field test to help develop multi-field rule 01
      input_data_file: ../asc_data/processed/set_00/AFR_T1_ASCOF_1A.csv
      input_mapping_file: ../asc_data/processed/set_00/AFR_T1_ASCOF_1A_mapping.json
      query:  # in dziban python query format, supports unfixed input file column names.
        - field('Social care-related quality of life score (All)', scale='zero')
        - field('Gross Total Expenditure (x1000)', scale='log')
        - field('Support provided to carers during the year', scale='zero')